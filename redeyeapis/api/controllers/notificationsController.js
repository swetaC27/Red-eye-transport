/*
alertDirectory will help populate the alert from the 
databases and these different alert messages will be sent according to the 
codebase.
*/
const mongoose = require("mongoose"),
  //Driver = mongoose.model("Driver"),
  alertsDirectory = mongoose.model("Alerts");

/*

viewNotifications: The Notifcations will be viewed from alertDirectory and these alerts
will always be helpful for the Emergency services.

Viewing Notification is generated by this way.
****GET operation is the most credible one ****
*/


exports.viewNotifications = function(req, res) {
    console.log(" body ",req.params);
    alertsDirectory.find({ forNUID: req.params.id}, function(err, notifications) {
    if (err) res.send(err);
    else {
      console.log('------ notifications --------',notifications);
      res.json(notifications);
    }
  });
};

/*

******addNotification method will allow for us to add notification such that 
POST METHOD will be added and 200 success message will be used for notifying 

*** Error codes always allow for checking the addition and using the posting methods successfully***

*/


exports.addNotifications = function(req, res) {
    console.log("------------------",req.body);
    let alerts = new alertsDirectory(req.body);

    alerts.save()
        .then(alerts => {
            res.status(200).json(alerts);
        })
        .catch(alerts => {
            res.status(400).send("Failed to create record");
        });
};

/*
updateDriverDetails : 

Days working : Updates the driver details accordingly

*/



exports.updateDriverDetails = function(req, res) {

    Driver.findOne({NUID: req.params.id}, (err, driver) => {
      if(!driver)
        return next(new Error("Could not load document"));
      else {
        driver.daysWorking = req.body.daysWorking;

        driver.save()
        .then(issue => {
            res.json('Update done');
        })
        .catch(err => {
            res.status(400).send('Update failed');
        })
      }
    });
}
